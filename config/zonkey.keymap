#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角
#define JP_BSLH  INT1         // (backslash)

&mt {
    flavor = "balanced";
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
};

&lt {
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
    flavor = "balanced";
};

/ {
    combos { compatible = "zmk,combos"; };

    mo2: mo2 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N2>, <&kp AT>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mo6: mo6 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N6>, <&kp CARET>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mo7: mo7 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N7>, <&kp AMPS>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mo8: mo8 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N8>, <&kp ASTRK>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mo9: mo9 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N9>, <&kp LPAR>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mo0: mo0 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N0>, <&kp LS(N9)>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moA: moA {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp UNDERSCORE>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moB: moB {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp EQUAL>, <&kp PLUS>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moC: moC {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp INT3>, <&kp JP_PIPE>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moD: moD {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp LBKT>, <&kp LBRC>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moE: moE {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp RBKT>, <&kp RBRC>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moF: moF {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp SEMI>, <&kp KP_PLUS>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moG: moG {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp APOSTROPHE>, <&kp DQT>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moH: moH {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp BACKSLASH>, <&kp TILDE2>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moI: moI {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp JP_BSLH>, <&kp JP_UNDERSCORE>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        // Mac に接続、デフォルトレイヤーを ON

        bt0: bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&toggle_layer_off 2>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 0>,
                <&macro_wait_time 500>;

            label = "BT0";
        };

        // Windows に接続、Windows レイヤーを ON

        bt1: bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&toggle_layer_off 2>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 500>,
                <&toggle_layer_on 2>;

            label = "BT0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        toggle_layer_on: toggle_layer_on {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOGGLE_LAYER_ON";
            #binding-cells = <1>;
        };

        toggle_layer_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOGGLE_LAYER_OFF";
            #binding-cells = <1>;
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |                        |  Y  |  U   |  I  |  O  |  P  | 
            // |  A  |  S  |  D  |  F  |  G  |LS(LG(S))|        　 | - |  H  |  J   |  K  |  L  |  `  | 
            // |SHIFT|  Z  |  X  |  C  |  V  |  B  |           | ; |  N  |  M   |  ,  |  .  |  /  | 
            // | CTRL | WIN | ALT |HENKAN|SPACE|MUHENKAN|       | BS | ENT |      　　　　       | DEL |           

            bindings = <
&kp Q                 &kp W           &kp E             &kp R           &kp T                               &kp Y            &kp U            &kp I              &kp O            &kp P
&mt LEFT_CONTROL A    &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LEFT_GUI F  &kp G        &none        &kp END   &kp H            &mt RIGHT_GUI J  &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL MINUS
&none                 &kp Z           &kp X             &kp C           &kp V        &lt 4 B      &kp HOME  &kp N            &kp M            &kp COMMA          &kp PERIOD       &kp SLASH
&mt LEFT_SHIFT LANG2  &none           &none             &lt 2 ESC       &lt 3 SPACE  &lt 5 TAB              &lt 5 BACKSPACE  &lt 3 ENTER                                                                   &mt RIGHT_SHIFT LANG1
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        WINDOWS {
            bindings = <
&trans              &trans  &trans  &trans               &trans                    &trans  &trans               &trans  &trans  &trans
&mt LEFT_CONTROL A  &trans  &trans  &mt RIGHT_CONTROL F  &trans  &trans    &trans  &trans  &mt RIGHT_CONTROL J  &trans  &trans  &mt LEFT_CONTROL MINUS
&trans              &trans  &trans  &trans               &trans  &trans    &trans  &trans  &trans               &trans  &trans  &trans
&trans              &trans  &trans  &trans               &trans  &trans            &trans  &trans                                                       &trans
            >;
        };

        MOUSE {
            // -----------------------------------------------------------------------------------------
            // | 半角/全角 |CAPS|     |     |     |                     |     |     |  -  |  ^  |  ¥  |
            // | TAB |     |     |     |     |     |              |    |     |     |     |  @  |  [  |
            // |SHIFT|     |     |     |     |     |            | 英数 | かな |     |     |     |  ]  |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|         | BS | ENT |                   | DEL |

            bindings = <
&kp LC(LS(NUMBER_1))  &kp LC(LS(NUMBER_2))  &kp LC(LS(NUMBER_3))  &kp LC(LS(NUMBER_4))  &kp LC(LS(NUMBER_5))                     &trans    &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp LC(LS(TAB))  &kp LC(TAB)
&trans                &trans                &trans                &trans                &trans                 &trans    &trans  &kp LEFT  &kp DOWN              &kp UP                 &kp RIGHT        &kp HOME
&trans                &trans                &trans                &kp LC(SEMICOLON)     &kp LC(LS(SEMICOLON))  &trans    &trans  &trans    &mkp LCLK             &mkp MCLK              &mkp RCLK        &kp END
&trans                &trans                &trans                &trans                &trans                 &trans            &trans    &trans                                                                     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |                     |  6  |  7  |  8  |  9  |   0  |
            // |      |     |     |     |     |     |           |    |     |     |     |  ↑  |      |
            // |SHIFT|     |     |     |     |     |           |     |     |     |  ←  |  ↓  |  →  |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|         | BS | ENT |                   | DEL |

            bindings = <
&kp LS(N1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)   &kp LS(N5)                       &kp LS(NUMBER_6)  &kp LS(N7)         &kp LS(N8)            &kp LS(N9)            &kp LS(N0)
&trans      &trans            &kp BACKSLASH     &kp EQUAL          &trans         &trans    &trans  &kp GRAVE         &kp SEMICOLON      &kp SINGLE_QUOTE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans      &trans            &trans            &kp LS(BACKSLASH)  &kp LS(EQUAL)  &trans    &trans  &kp LS(GRAVE)     &kp LS(SEMICOLON)  &kp LS(SINGLE_QUOTE)  &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)
&trans      &trans            &trans            &trans             &trans         &trans            &trans            &trans                                                                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        BT {
            // -----------------------------------------------------------------------------------------
            // | BT0 | BT1 | BT2 | BT3 | BT4 |                |  -  |  7  |  8  |  9  |  +  |
            // |BTCLR |     |     |     |     |     |           |  /  |  4  |  5  |  6  |  *  | 
            // |SHIFT|     |     |     |     |     |           |  0  |  1  |  2  |   3 |  .  |  =  |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|        | BS | ENT |                  | DEL |

            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &kp MINUS        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0
&bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans        &trans    &trans  &kp SLASH        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK
&trans        &trans          &trans        &trans        &trans        &trans    &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD       &kp EQUAL
&trans        &trans          &trans        &trans        &trans        &trans            &trans           &trans                                                              &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            // -----------------------------------------------------------------------------------------
            // | F1  | F2  | F3  | F4  | F5  |                     | F6  | F7 | F8  | F9 | F10 |
            // | F11 | F12 |     |     |     |     |           |    |     |     |     |     |      |
            // |SHIFT|     |     |     |     |     |           |     |     |     |     |     |      |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|         | BS | ENT |                   | DEL |

            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5                     &trans       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans    &trans  &kp COLON    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&trans  &trans  &trans  &trans  &trans   &trans    &trans  &kp PERCENT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS
&trans  &trans  &trans  &trans  &trans   &trans            &trans       &trans                                                  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
            label = "Keep this at layer 5; referenced by scroll-layers = <5>";
        };
    };
};
